/*Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.*/ 
{

  /*This is A:  A means that we will not deploy ExpressRoute, and we will not configure 
  Multiple VPNs in Active/Active Mode */

  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },
    "templateLink": {
      "type": "string",
      "defaultValue": "site1/af_vnet_azuredeploy1_servicesB..json",
      "metadata": { "description": "The parameter file for the second site's GW." }
    },
    /*in the metadata spreadsheet, on the VNET tab, filter on VNET104
    select the columns with Temlate and grouped by color. */
    "vnet404vnetName": {
      "type": "string",
      "defaultValue": "vnet1a_services_az",
      "metadata": { "description": "Arbitrary name for the new VNET." }
    },
    "vnet404vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.128.248.0/21",
      "metadata": { "description": "IP address range for the new VNET." }
    },
    "vnet404SubscriptionID": {
      "type": "string",
      "defaultValue": "30457dd5-e56b-416b-9228-d48b37fe7caa",
      "metadata": { "description": "IP Subscription ID of the VNET." }
    },
    "vnet404ResourceGroupName": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_services_az",
      "metadata": { "description": "ResouceGroup of the VNET." }
    },
    "vnet404locationName": {
      "type": "string",
      "defaultValue": "usgovarizona",
      "metadata": { "description": "IP Location of the VNET." }
    },
    "vnet404dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": { "description": "DNS Servers of the VNET." }
    },
    "vnet404dnsPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "DNS Prefix of the VNET." }
    },

    /*
    Using the metadata spreadsheet, the subnnet tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "snet474Name": {
      "type": "string",
      "defaultValue": "s600_Services_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet474IP": {
      "type": "string",
      "defaultValue": "10.128.248.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet474NSGName": {
      "type": "string",
      "defaultValue": "600NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet475Name": {
      "type": "string",
      "defaultValue": "s625_LB_Services_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet475IP": {
      "type": "string",
      "defaultValue": "10.128.250.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet475NSGName": {
      "type": "string",
      "defaultValue": "625NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet480Name": {
      "type": "string",
      "defaultValue": "s680_RTR_InsideTest_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet480IP": {
      "type": "string",
      "defaultValue": "10.128.251.0/28",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet480NSGName": {
      "type": "string",
      "defaultValue": "680NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet482Name": {
      "type": "string",
      "defaultValue": "s681_RTR_OutsideTest_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet482IP": {
      "type": "string",
      "defaultValue": "10.128.251.16/28",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet482NSGName": {
      "type": "string",
      "defaultValue": "681NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet483Name": {
      "type": "string",
      "defaultValue": "s682_FW_IntTest_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet483IP": {
      "type": "string",
      "defaultValue": "10.128.251.32/28",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet483NSGName": {
      "type": "string",
      "defaultValue": "682NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet484Name": {
      "type": "string",
      "defaultValue": "s683_FW_ExtTest_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet484IP": {
      "type": "string",
      "defaultValue": "10.128.251.64/28",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet484NSGName": {
      "type": "string",
      "defaultValue": "683NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet476Name": {
      "type": "string",
      "defaultValue": "s650_DMZ_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet476IP": {
      "type": "string",
      "defaultValue": "10.128.252.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet476NSGName": {
      "type": "string",
      "defaultValue": "650NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet479Name": {
      "type": "string",
      "defaultValue": "s655_LB_DMZ_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet479IP": {
      "type": "string",
      "defaultValue": "10.128.253.0/25",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet479NSGName": {
      "type": "string",
      "defaultValue": "655NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet477Name": {
      "type": "string",
      "defaultValue": "s660_User_Tier0_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet477IP": {
      "type": "string",
      "defaultValue": "10.128.254.0/26",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet477NSGName": {
      "type": "string",
      "defaultValue": "660NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet478Name": {
      "type": "string",
      "defaultValue": "s661_User_Tier1_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet478IP": {
      "type": "string",
      "defaultValue": "10.128.254.64/26",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet478NSGName": {
      "type": "string",
      "defaultValue": "661NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet485Name": {
      "type": "string",
      "defaultValue": "s662_User_Tier2_Services_AZ",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet485IP": {
      "type": "string",
      "defaultValue": "10.128.254.128/26",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet485NSGName": {
      "type": "string",
      "defaultValue": "662NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet415Name": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet415IP": {
      "type": "string",
      "defaultValue": "10.128.255.224/27",
      "metadata": { "description": "CRI notation of the Subnet." }
    },

    /*
    Using the metadata spreadsheet, the Peering tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "pr404PeeringName": {
      "type": "string",
      "defaultValue": "vnet1a_services_az_vnet1a_prod_az",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr404Source": {
      "type": "string",
      "defaultValue": "vnet1a_services_az",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr404destSubscriptionID": {
      "type": "string",
      "defaultValue": "4a0d1d83-f557-4065-8423-be499038298a",
      "metadata": { "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID." }
    },
    "pr404destResourceGroup": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_prod_az",
      "metadata": { "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID." }
    },
    "pr404DestinationVNET": {
      "type": "string",
      "defaultValue": "vnet1a_prod_az",
      "metadata": { "description": "Specific name for the source peering Azure Vnet." }
    },
    "pr404allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic to access this VNET?" }
    },
    "pr404allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?" }
    },
    "pr404allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic from peering network leverage the gateway?" }
    },
    "pr404useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Can traffic use the remote gateway?" }
    },
    "pr405PeeringName": {
      "type": "string",
      "defaultValue": "vnet1a_services_az_vnet1a_hbi_az",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr405Source": {
      "type": "string",
      "defaultValue": "vnet1a_services_az",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr405destSubscriptionID": {
      "type": "string",
      "defaultValue": "97eba262-9086-4a3e-9770-dcfef6c3df30",
      "metadata": { "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID." }
    },
    "pr405destResourceGroup": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_hbi_az",
      "metadata": { "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID." }
    },
    "pr405DestinationVNET": {
      "type": "string",
      "defaultValue": "vnet1a_hbi_az",
      "metadata": { "description": "Specific name for the source peering Azure Vnet." }
    },
    "pr405allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic to access this VNET?" }
    },
    "pr405allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?" }
    },
    "pr405allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic from peering network leverage the gateway?" }
    },
    "pr405useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Can traffic use the remote gateway?" }
    },
    "pr406PeeringName": {
      "type": "string",
      "defaultValue": "vnet1a_services_az_vnet1a_preprod_az",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr406Source": {
      "type": "string",
      "defaultValue": "vnet1a_services_az",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr406destSubscriptionID": {
      "type": "string",
      "defaultValue": "a4b962d2-6b17-4c38-af02-010a6e774379",
      "metadata": { "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID." }
    },
    "pr406destResourceGroup": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_preprod_az",
      "metadata": { "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID." }
    },
    "pr406DestinationVNET": {
      "type": "string",
      "defaultValue": "vnet1a_preprod_az",
      "metadata": { "description": "Specific name for the source peering Azure Vnet." }
    },
    "pr406allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic to access this VNET?" }
    },
    "pr406allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?" }
    },
    "pr406allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic from peering network leverage the gateway?" }
    },
    "pr406useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Can traffic use the remote gateway?" }
    },
    "pr407PeeringName": {
      "type": "string",
      "defaultValue": "vnet1a_services_az_vnet1a_storage_az",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr407Source": {
      "type": "string",
      "defaultValue": "vnet1a_services_az",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr407destSubscriptionID": {
      "type": "string",
      "defaultValue": "0223b7af-344f-42cd-bed2-5ebbc7d06d5d",
      "metadata": { "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID." }
    },
    "pr407destResourceGroup": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_storage_az",
      "metadata": { "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID." }
    },
    "pr407DestinationVNET": {
      "type": "string",
      "defaultValue": "vnet1a_storage_az",
      "metadata": { "description": "Specific name for the source peering Azure Vnet." }
    },
    "pr407allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic to access this VNET?" }
    },
    "pr407allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?" }
    },
    "pr407allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic from peering network leverage the gateway?" }
    },
    "pr407useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Can traffic use the remote gateway?" }
    },

    /*
    Using the metadata spreadsheet, the localnetworkgateway tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "lngw01dname": {
      "type": "string",
      "defaultValue": "lngw_boulder_dc1",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "lngw01dgatewayIPAddress": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": { "description": "IP address of local network gateway." }
    },
    "lngw01dlocalNetworkAddressSpace": {
      "type": "array",
      "defaultValue": "10.0.0.0/9",
      "metadata": { "description": "Local network site address space." }
    },
    "lngw01dConfigureBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "True or False, will you configure BGP with the LocalNetworkGateway" }
    },
    "lngw01dASNNumber": {
      "type": "int",
      "defaultValue": 65501,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "lngw01dBGPPeerIPAddress": {
      "type": "string",
      "defaultValue": "10.0.0.254",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "lngw01dpeerWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },
    "lngw02dname": {
      "type": "string",
      "defaultValue": "lngw_austin_dc2",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "lngw02dgatewayIPAddress": {
      "type": "string",
      "defaultValue": "1.1.1.9",
      "metadata": { "description": "IP address of local network gateway." }
    },
    "lngw02dlocalNetworkAddressSpace": {
      "type": "array",
      "defaultValue": "10.0.0.0/9",
      "metadata": { "description": "Local network site address space." }
    },
    "lngw02dConfigureBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "True or False, will you configure BGP with the LocalNetworkGateway" }
    },
    "lngw02dASNNumber": {
      "type": "int",
      "defaultValue": 65502,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "lngw02dBGPPeerIPAddress": {
      "type": "string",
      "defaultValue": " ",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "lngw02dpeerWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },
    "lngw204aname": {
      "type": "string",
      "defaultValue": "lngw_site2a_w2",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "lngw204agatewayIPAddress": {
      "type": "string",
      "defaultValue": "52.183.112.112",
      "metadata": { "description": "IP address of local network gateway." }
    },
    "lngw204alocalNetworkAddressSpace": {
      "type": "array",
      "defaultValue": "10.128.127.224/27",
      "metadata": { "description": "Local network site address space." }
    },
    "lngw204aConfigureBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "True or False, will you configure BGP with the LocalNetworkGateway" }
    },
    "lngw204aASNNumber": {
      "type": "int",
      "defaultValue": 65522,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "lngw204aBGPPeerIPAddress": {
      "type": "string",
      "defaultValue": "10.128.127.228",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "lngw204apeerWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },
    "lngw204bname": {
      "type": "string",
      "defaultValue": "lngw_site2b_w2",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "lngw204bgatewayIPAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "IP address of local network gateway." }
    },
    "lngw204blocalNetworkAddressSpace": {
      "type": "array",
      "defaultValue": "10.128.127.224/27",
      "metadata": { "description": "Local network site address space." }
    },
    "lngw204bConfigureBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "True or False, will you configure BGP with the LocalNetworkGateway" }
    },
    "lngw204bASNNumber": {
      "type": "int",
      "defaultValue": 65522,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "lngw204bBGPPeerIPAddress": {
      "type": "string",
      "defaultValue": "10.128.127.229",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "lngw204bpeerWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },

    /*
    Using the metadata spreadsheet, the gateway tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "gw404vGatewayName": {
      "type": "string",
      "defaultValue": "gw_vnet1a_services_az",
      "metadata": { "description": "Arbitrary name for the new gateway" }
    },
    "gw404vvnetName": {
      "type": "string",
      "defaultValue": "vnet1a_services_az",
      "metadata": { "description": "The VNET the gateway is associated with." }
    },
    "gw404vGatewayType": {
      "type": "string",
      "defaultValue": "Vpn",
      "metadata": { "description": "The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'." }
    },
    "gw404vVPNType": {
      "type": "string",
      "defaultValue": "RouteBased",
      "metadata": { "description": "The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'." }
    },
    "gw404vEnableActiveActive": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "ActiveActive flag" }
    },
    "gw404vgwSKUNameTier": {
      "type": "string",
      "defaultValue": "VpnGw1",
      "metadata": { "description": "The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway." }
    },
    "gw404vPublicIPName1": {
      "type": "string",
      "defaultValue": "gw_vnet1a_services_az_gwpip1",
      "metadata": { "description": "IP configurations for virtual network gateway." }
    },
    "gw404vPublicIPName2": {
      "type": "string",
      "defaultValue": "gw_vnet1a_services_az_gwpip2",
      "metadata": { "description": "IP configurations for virtual network gateway." }
    },
    "gw404venableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Whether BGP is enabled for this virtual network gateway or not." }
    },
    "gw404vbgpASN": {
      "type": "int",
      "defaultValue": 65524,
      "metadata": { "description": "The BGP speaker's ASN.." }
    },
    "gw404vbgpRoutingWeight": {
      "type": "int",
      "defaultValue": 100,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },

    /*
    Using the metadata spreadsheet, the connection tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "cnct400ConnectionName": {
      "type": "string",
      "defaultValue": "cnct_IPSec_gw_vnet1a_services_az_To_lngw_boulder_dc1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "cnct400gwName": {
      "type": "string",
      "defaultValue": "gw_vnet1a_services_az",
      "metadata": { "description": "The reference to the virtual network gateway resource" }
    },
    "cnct400connectionType": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": { "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)" }
    },
    "cnct400remoteGWName": {
      "type": "string",
      "defaultValue": "lngw_boulder_dc1",
      "metadata": { "description": "The reference to the local network gateway or remote gateway resource" }
    },
    "cnct400sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The IPSec shared key" }
    },
    "cnct400routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The routing weight" }
    },
    "cnct400enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "EnableBGP flag" }
    },
    "cnct401ConnectionName": {
      "type": "string",
      "defaultValue": "cnct_Vnet2Vnet_gw_vnet1a_services_az_To_gw_vnet1a_services_tx",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "cnct401gwName": {
      "type": "string",
      "defaultValue": "gw_vnet1a_services_az",
      "metadata": { "description": "The reference to the virtual network gateway resource" }
    },
    "cnct401connectionType": {
      "type": "string",
      "defaultValue": "Vnet2Vnet",
      "metadata": { "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)" }
    },
    "cnct401remoteSubscriptionID": {
      "type": "string",
      "defaultValue": "30457dd5-e56b-416b-9228-d48b37fe7caa",
      "metadata": { "description": "The SubscriptionID of the remote VNET2VNET resource" }
    },
    "cnct401remoteResourceGroupName": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_services_tx",
      "metadata": { "description": "Remote Resource Group for VNET2VNET ResourceID creation" }
    },
    "cnct401remoteGWName": {
      "type": "string",
      "defaultValue": "gw_vnet1a_services_tx",
      "metadata": { "description": "The reference to the local network gateway or remote gateway resource" }
    },
    "cnct401sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The IPSec shared key" }
    },
    "cnct401routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The routing weight" }
    },
    "cnct401enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "EnableBGP flag" }
    },
    "cnct401remoteLocation": {
      "type": "string",
      "defaultValue": "usgovtexas",
      "metadata": { "description": "The Region where the Vnet2Vnet connection is terminated" }
    },

    "cnct402ConnectionName": {
      "type": "string",
      "defaultValue": "cnct_IPSec_gw_vnet1a_services_az_To_lngw_site2a_w2",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "cnct402gwName": {
      "type": "string",
      "defaultValue": "gw_vnet1a_services_az",
      "metadata": { "description": "The reference to the virtual network gateway resource" }
    },
    "cnct402connectionType": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": { "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)" }
    },
    "cnct402remoteGWName": {
      "type": "string",
      "defaultValue": "lngw_site2a_w2",
      "metadata": { "description": "The reference to the local network gateway or remote gateway resource" }
    },
    "cnct402sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The IPSec shared key" }
    },
    "cnct402routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The routing weight" }
    },
    "cnct402enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "EnableBGP flag" }
    },
    "cnct403ConnectionName": {
      "type": "string",
      "defaultValue": "cnct_IPSec_gw_vnet1a_services_az_To_lngw_site2b_w2",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "cnct403gwName": {
      "type": "string",
      "defaultValue": "gw_vnet1a_services_az",
      "metadata": { "description": "The reference to the virtual network gateway resource" }
    },
    "cnct403connectionType": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": { "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)" }
    },
    "cnct403remoteGWName": {
      "type": "string",
      "defaultValue": "lngw_site2b_w2",
      "metadata": { "description": "The reference to the local network gateway or remote gateway resource" }
    },
    "cnct403sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The IPSec shared key" }
    },
    "cnct403routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The routing weight" }
    },
    "cnct403enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "EnableBGP flag" }
    }

  }, /*Keep this line*/
  "variables": {
    "apiVersion": "2017-06-01",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet404vnetName'))]",
    "subnet799Ref": "[concat(variables('vnetID'),'/subnets/',parameters('snet415Name'))]"
  },
  "resources": [ /*go to the Metadata spreadsheet, NSGGroups tab, filter on VNET 104
    Select the Resources that are grouped by color*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet474NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet475NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet476NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet479NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet477NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet478NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet485NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet480NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet482NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet484NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet483NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },

    /*In the metadata spreadsheet, on the VNET Tab, filter on VNET104
          select the columns with Resource and grouped by Color. */
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnet404vnetName')]",
      "location": "[parameters('vnet404locationName')]",
      "tags": { "displayName": "AzureFoundation VNet Definition" },
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('vnet404vnetAddressPrefix')]" ] },
        "dhcpOptions": { "dnsServers": "[parameters('vnet404dnsServers')]" },
        "subnets": [

          /*In the metadata spreadsheet, on the Subnet Tab, filter on VNET104
          select the columns with Resource and grouped by Color. */
          {
            "name": "[parameters('snet474Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet474IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet474NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet475Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet475IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet475NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet480Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet480IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet480NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet482Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet482IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet482NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet483Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet483IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet483NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet484Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet484IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet484NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet476Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet476IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet476NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet479Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet479IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet479NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet477Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet477IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet477NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet478Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet478IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet478NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet485Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet485IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet485NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet415Name')]",
            "properties": { "addressPrefix": "[parameters('snet415IP')]" }
          }

        ] /*Keep this Line*/

      },
      "resources": [ /*Keep This Line*/
        /*In the Metadata, select VNET104 on the Peering Tab and select the Resources */
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr404PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr404allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr404allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr404allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr404useRemoteGateway')]",
            "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('pr404destSubscriptionID'), '/resourceGroups/', parameters('pr404destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr404DestinationVNET'))]" }
          },
          "dependsOn": [ "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet404vnetName'))]" ]
        },
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr405PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr405allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr405allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr405allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr405useRemoteGateway')]",
            "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('pr405destSubscriptionID'), '/resourceGroups/', parameters('pr405destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr405DestinationVNET'))]" }
          },
          "dependsOn": [ "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet404vnetName'))]" ]
        },
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr406PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr406allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr406allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr406allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr406useRemoteGateway')]",
            "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('pr406destSubscriptionID'), '/resourceGroups/', parameters('pr406destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr406DestinationVNET'))]" }
          },
          "dependsOn": [ "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet404vnetName'))]" ]
        },
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr407PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr407allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr407allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr407allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr407useRemoteGateway')]",
            "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('pr407destSubscriptionID'), '/resourceGroups/', parameters('pr407destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr407DestinationVNET'))]" }
          },
          "dependsOn": [ "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet404vnetName'))]" ]
        }

      ], /*Keep This Line*/
      "dependsOn": /*Keep This Line*/
      [ /*Keep This Line*/
        /*Using the metadata template on the Subnet Tab, filter to VNET104 and select
          the columns with DependsOn and grouped by color*/
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet474NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet475NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet480NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet482NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet483NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet484NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet476NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet479NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet477NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet478NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet485NSGName'))]"


      ]
    },
    /*using the metadata spreadsheet goto the localnetworkgateway tab filter on VNET104
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('lngw01dname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": { "addressPrefixes": "[parameters('lngw01dlocalNetworkAddressSpace')]" },
        "bgpSettings": {
          "asn": "[parameters('lngw01dASNNumber')]",
          "bgpPeeringAddress": "[parameters('lngw01dBGPPeerIPAddress')]",
          "peerWeight": "[parameters('lngw01dpeerWeight')]"
        },
        "gatewayIpAddress": "[parameters('lngw01dgatewayIPAddress')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('lngw02dname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": { "addressPrefixes": "[parameters('lngw02dlocalNetworkAddressSpace')]" },
        "bgpSettings": {
          "asn": "[parameters('lngw02dASNNumber')]",
          "bgpPeeringAddress": "[parameters('lngw02dBGPPeerIPAddress')]",
          "peerWeight": "[parameters('lngw02dpeerWeight')]"
        },
        "gatewayIpAddress": "[parameters('lngw02dgatewayIPAddress')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('lngw204aname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": { "addressPrefixes": "[parameters('lngw204alocalNetworkAddressSpace')]" },
        "bgpSettings": {
          "asn": "[parameters('lngw204aASNNumber')]",
          "bgpPeeringAddress": "[parameters('lngw204aBGPPeerIPAddress')]",
          "peerWeight": "[parameters('lngw204apeerWeight')]"
        },
        "gatewayIpAddress": "[parameters('lngw204agatewayIPAddress')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('lngw204bname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": { "addressPrefixes": "[parameters('lngw204blocalNetworkAddressSpace')]" },
        "bgpSettings": {
          "asn": "[parameters('lngw204bASNNumber')]",
          "bgpPeeringAddress": "[parameters('lngw204bBGPPeerIPAddress')]",
          "peerWeight": "[parameters('lngw204bpeerWeight')]"
        },
        "gatewayIpAddress": "[parameters('lngw204bgatewayIPAddress')]"
      }
    },

    /*using the metadata spreadsheet goto the gateway tab filter on VNET104
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gw404vPublicIPName1')]",
      "location": "[resourceGroup().location]",
      "properties": { "publicIPAllocationMethod": "Dynamic" }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gw404vPublicIPName2')]",
      "location": "[resourceGroup().location]",
      "properties": { "publicIPAllocationMethod": "Dynamic" }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('gw404vGatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/publicIPAddresses/', parameters('gw404vPublicIPName1'))]", "[concat('Microsoft.Network/publicIPAddresses/', parameters('gw404vPublicIPName2'))]", "[concat('Microsoft.Network/virtualNetworks/', parameters('gw404vvnetName'))]" ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[parameters('gw404vPublicIPName1')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[variables('subnet799Ref')]" },
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gw404vPublicIPName1'))]" }
            }
          },
          {
            "name": "[parameters('gw404vPublicIPName2')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[variables('subnet799Ref')]" },
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gw404vPublicIPName2'))]" }
            }
          }
        ],
        "gatewayType": "[parameters('gw404vGatewayType')]",
        "vpnType": "[parameters('gw404vVPNType')]",
        "activeActive": "[parameters('gw404vEnableActiveActive')]",
        "enableBGP": "[parameters('gw404venableBGP')]",
        "bgpSettings": { "asn": "[parameters('gw404vbgpASN')]" },
        "sku": {
          "name": "[parameters('gw404vgwSKUNameTier')]",
          "tier": "[parameters('gw404vgwSKUNameTier')]"
        }
      }
    },

    /*using the metadata spreadsheet goto the Connection tab filter on VNET104
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('cnct400ConnectionName')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct400gwName'))]", "[concat('Microsoft.Network/localNetworkGateways/', parameters('cnct400remoteGWName'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct400gwName'))]" },
        "localNetworkGateway2": { "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('cnct400remoteGWName'))]" },
        "sharedKey": "[parameters('cnct400sharedKey')]",
        "connectionType": "[parameters('cnct400connectionType')]",
        "routingWeight": "[parameters('cnct400routingWeight')]",
        "enableBGP": "[parameters('cnct400enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[concat('cnct1',parameters('cnct401ConnectionName'))]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct401gwName'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct401gwName'))]" },
        "virtualNetworkGateway2": { "id": "[concat('/subscriptions/',parameters('cnct401remoteSubscriptionID'),'/resourceGroups/',parameters('cnct401remoteResourceGroupName'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('cnct401remoteGWName'))]" },
        "sharedKey": "[parameters('cnct401sharedKey')]",
        "connectionType": "[parameters('cnct401connectionType')]",
        "routingWeight": "[parameters('cnct401routingWeight')]",
        "enableBGP": "[parameters('cnct401enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[concat('cnct2',parameters('cnct401ConnectionName'))]",
      "type": "Microsoft.Network/connections",
      "location": "[parameters('cnct401remoteLocation')]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct401gwName'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[concat('/subscriptions/',parameters('cnct401remoteSubscriptionID'),'/resourceGroups/',parameters('cnct401remoteResourceGroupName'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('cnct401remoteGWName'))]" },
        "virtualNetworkGateway2": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct401gwName'))]" },
        "sharedKey": "[parameters('cnct401sharedKey')]",
        "connectionType": "[parameters('cnct401connectionType')]",
        "routingWeight": "[parameters('cnct401routingWeight')]",
        "enableBGP": "[parameters('cnct401enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('cnct402ConnectionName')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct402gwName'))]", "[concat('Microsoft.Network/localNetworkGateways/', parameters('cnct402remoteGWName'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct402gwName'))]" },
        "localNetworkGateway2": { "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('cnct402remoteGWName'))]" },
        "sharedKey": "[parameters('cnct402sharedKey')]",
        "connectionType": "[parameters('cnct402connectionType')]",
        "routingWeight": "[parameters('cnct402routingWeight')]",
        "enableBGP": "[parameters('cnct402enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('cnct403ConnectionName')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct403gwName'))]", "[concat('Microsoft.Network/localNetworkGateways/', parameters('cnct403remoteGWName'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct403gwName'))]" },
        "localNetworkGateway2": { "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('cnct403remoteGWName'))]" },
        "sharedKey": "[parameters('cnct403sharedKey')]",
        "connectionType": "[parameters('cnct403connectionType')]",
        "routingWeight": "[parameters('cnct403routingWeight')]",
        "enableBGP": "[parameters('cnct403enableBGP')]"
      }
    }

  ],
  "outputs": {

  }
}
