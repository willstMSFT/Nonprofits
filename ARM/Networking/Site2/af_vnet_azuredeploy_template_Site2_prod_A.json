/*Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.*/ 
{

  /*This is A:  A means that we will not deploy ExpressRoute, and we will not configure 
  Multiple VPNs in Active/Active Mode */

  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },
    "templateLink": {
      "type": "string",
      "defaultValue": "site1/af_vnet_azuredeploy1_servicesB..json",
      "metadata": { "description": "The parameter file for the second site's GW." }
    },
    /*in the metadata spreadsheet, on the VNET tab, filter on VNET200
    select the columns with Temlate and grouped by color. */
    "vnet200vnetName": {
      "type": "string",
      "defaultValue": "vnet1a_prod_w2",
      "metadata": { "description": "Arbitrary name for the new VNET." }
    },
    "vnet200vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.128.64.0/20",
      "metadata": { "description": "IP address range for the new VNET." }
    },
    "vnet200SubscriptionID": {
      "type": "string",
      "defaultValue": "ec1cea2e-92aa-45a7-89b0-d9fc40df2beb",
      "metadata": { "description": "IP Subscription ID of the VNET." }
    },
    "vnet200ResourceGroupName": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_prod_w2",
      "metadata": { "description": "ResouceGroup of the VNET." }
    },
    "vnet200locationName": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": { "description": "IP Location of the VNET." }
    },
    "vnet200dnsServers": {
      "type": "array",
      "defaultValue": [ "10.128.59.36" ],
      "metadata": { "description": "DNS Servers of the VNET." }
    },
    "vnet200dnsPrefix": {
      "type": "string",
      "defaultValue": "slg.us",
      "metadata": { "description": "DNS Prefix of the VNET." }
    },

    /*
    Using the metadata spreadsheet, the subnnet tab, filter results on VNET200, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "snet216Name": {
      "type": "string",
      "defaultValue": "s110_Web_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet216IP": {
      "type": "string",
      "defaultValue": "10.128.66.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet216NSGName": {
      "type": "string",
      "defaultValue": "110NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet217Name": {
      "type": "string",
      "defaultValue": "s115_LB_Web_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet217IP": {
      "type": "string",
      "defaultValue": "10.128.67.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet217NSGName": {
      "type": "string",
      "defaultValue": "115NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet218Name": {
      "type": "string",
      "defaultValue": "s120_App_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet218IP": {
      "type": "string",
      "defaultValue": "10.128.68.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet218NSGName": {
      "type": "string",
      "defaultValue": "120NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet219Name": {
      "type": "string",
      "defaultValue": "s125_LB_App_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet219IP": {
      "type": "string",
      "defaultValue": "10.128.69.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet219NSGName": {
      "type": "string",
      "defaultValue": "125NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet220Name": {
      "type": "string",
      "defaultValue": "s130_DB_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet220IP": {
      "type": "string",
      "defaultValue": "10.128.70.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet220NSGName": {
      "type": "string",
      "defaultValue": "130NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet221Name": {
      "type": "string",
      "defaultValue": "s135_LB_DB_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet221IP": {
      "type": "string",
      "defaultValue": "10.128.71.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet221NSGName": {
      "type": "string",
      "defaultValue": "135NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet222Name": {
      "type": "string",
      "defaultValue": "s150_DMZ_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet222IP": {
      "type": "string",
      "defaultValue": "10.128.72.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet222NSGName": {
      "type": "string",
      "defaultValue": "150NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet223Name": {
      "type": "string",
      "defaultValue": "s155_LB_DMZ_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet223IP": {
      "type": "string",
      "defaultValue": "10.128.73.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet223NSGName": {
      "type": "string",
      "defaultValue": "155NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet224Name": {
      "type": "string",
      "defaultValue": "s160_User_Tier0_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet224IP": {
      "type": "string",
      "defaultValue": "10.128.74.0/25",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet224NSGName": {
      "type": "string",
      "defaultValue": "160NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet225Name": {
      "type": "string",
      "defaultValue": "s161_User_Tier1_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet225IP": {
      "type": "string",
      "defaultValue": "10.128.74.128/25",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet225NSGName": {
      "type": "string",
      "defaultValue": "161NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet226Name": {
      "type": "string",
      "defaultValue": "s162_User_Tier2_Prod_W2",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet226IP": {
      "type": "string",
      "defaultValue": "10.128.75.0/25",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet226NSGName": {
      "type": "string",
      "defaultValue": "162NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },

    /*
    Using the metadata spreadsheet, the Peering tab, filter results on VNET200, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "pr200PeeringName": {
      "type": "string",
      "defaultValue": "vnet1a_prod_w2_vnet1a_services_w2",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr200Source": {
      "type": "string",
      "defaultValue": "vnet1a_prod_w2",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr200destSubscriptionID": {
      "type": "string",
      "defaultValue": "730f26b5-ebf5-4518-999f-0b4eb0cdc8f9",
      "metadata": { "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID." }
    },
    "pr200destResourceGroup": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_services_w2",
      "metadata": { "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID." }
    },
    "pr200DestinationVNET": {
      "type": "string",
      "defaultValue": "vnet1a_services_w2",
      "metadata": { "description": "Specific name for the source peering Azure Vnet." }
    },
    "pr200allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic to access this VNET?" }
    },
    "pr200allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?" }
    },
    "pr200allowGWAccess": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Can traffic from peering network leverage the gateway?" }
    },
    "pr200useRemoteGateway": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic use the remote gateway?" }
    }


  }, /*keep this line*/
  "variables": {
    "apiVersion": "2017-06-01",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('VNET200vnetName'))]"

  },
  "resources": [ /*go to the Metadata spreadsheet, NSGRules tab, filter on VNET 104
    Select the Resources that are grouped by color*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet216NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet217NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet218NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet219NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet220NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet221NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet222NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet223NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet224NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet225NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet226NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },

    /*In the metadata spreadsheet, on the VNET Tab, filter on VNET200
          select the columns with Resource and grouped by Color. */
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnet200vnetName')]",
      "location": "[parameters('vnet200locationName')]",
      "tags": { "displayName": "AzureFoundation VNet Definition" },
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('vnet200vnetAddressPrefix')]" ] },
        "dhcpOptions": { "dnsServers": "[parameters('vnet200dnsServers')]" },
        "subnets": [

          /*In the metadata spreadsheet, on the Subnet Tab, filter on VNET200
          select the columns with Resource and grouped by Color. */
          {
            "name": "[parameters('snet216Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet216IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet216NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet217Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet217IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet217NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet218Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet218IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet218NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet219Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet219IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet219NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet220Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet220IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet220NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet221Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet221IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet221NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet222Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet222IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet222NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet223Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet223IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet223NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet224Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet224IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet224NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet225Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet225IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet225NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet226Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet226IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet226NSGName'))]" }
            }
          }


        ] /*Keep this Line*/
      }, /*Keep This Line*/
      "resources": /*Keep this Line*/
      [ /*Keep this Line*/
        /*Go to the Peering tab of the Metadata spreadsheet and filter on VNET 104
          select the Resources for Peering and past them below. */
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr200PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr200allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr200allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr200allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr200useRemoteGateway')]",
            "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('pr200destSubscriptionID'), '/resourceGroups/', parameters('pr200destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr200DestinationVNET'))]" }
          },
          "dependsOn": [ "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet200vnetName'))]" ]
        }

      ],
      "dependsOn": /*Keep This Line*/
      [ /*Keep This Line*/
        /*Using the metadata template on the Subnet Tab, filter to VNET200 and select
          the columns with DependsOn and grouped by color*/
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet216NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet217NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet218NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet219NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet220NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet221NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet222NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet223NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet224NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet225NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet226NSGName'))]"

      ] /*Keep This Line*/
    } /*Keep This Line*/
  ], /*Keep This Line*/

  /*Keep This Line*/
  /*Keep this line */
  "outputs": {

  }
}
