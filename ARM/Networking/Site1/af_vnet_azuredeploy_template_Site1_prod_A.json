/*Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.*/ 
{

  /*This is A:  A means that we will not deploy ExpressRoute, and we will not configure 
  Multiple VPNs in Active/Active Mode */

  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },
    "templateLink": {
      "type": "string",
      "defaultValue": "site1/af_vnet_azuredeploy1_servicesB..json",
      "metadata": { "description": "The parameter file for the second site's GW." }
    },
    /*in the metadata spreadsheet, on the VNET tab, filter on VNET100
    select the columns with Temlate and grouped by color. */
    "vnet100vnetName": {
      "type": "string",
      "defaultValue": "vnet1a_prod_w1",
      "metadata": { "description": "Arbitrary name for the new VNET." }
    },
    "vnet100vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.128.0.0/20",
      "metadata": { "description": "IP address range for the new VNET." }
    },
    "vnet100SubscriptionID": {
      "type": "string",
      "defaultValue": "ec1cea2e-92aa-45a7-89b0-d9fc40df2beb",
      "metadata": { "description": "IP Subscription ID of the VNET." }
    },
    "vnet100ResourceGroupName": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_prod_w1",
      "metadata": { "description": "ResouceGroup of the VNET." }
    },
    "vnet100locationName": {
      "type": "string",
      "defaultValue": "westcentralus",
      "metadata": { "description": "IP Location of the VNET." }
    },
    "vnet100dnsServers": {
      "type": "array",
      "defaultValue": [ "10.128.59.36" ],
      "metadata": { "description": "DNS Servers of the VNET." }
    },
    "vnet100dnsPrefix": {
      "type": "string",
      "defaultValue": "slg.us",
      "metadata": { "description": "DNS Prefix of the VNET." }
    },

    /*
    Using the metadata spreadsheet, the subnnet tab, filter results on VNET100, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "snet116Name": {
      "type": "string",
      "defaultValue": "s110_Web_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet116IP": {
      "type": "string",
      "defaultValue": "10.128.2.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet116NSGName": {
      "type": "string",
      "defaultValue": "110NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet117Name": {
      "type": "string",
      "defaultValue": "s115_LB_Web_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet117IP": {
      "type": "string",
      "defaultValue": "10.128.3.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet117NSGName": {
      "type": "string",
      "defaultValue": "115NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet118Name": {
      "type": "string",
      "defaultValue": "s120_App_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet118IP": {
      "type": "string",
      "defaultValue": "10.128.4.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet118NSGName": {
      "type": "string",
      "defaultValue": "120NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet119Name": {
      "type": "string",
      "defaultValue": "s125_LB_App_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet119IP": {
      "type": "string",
      "defaultValue": "10.128.5.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet119NSGName": {
      "type": "string",
      "defaultValue": "125NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet120Name": {
      "type": "string",
      "defaultValue": "s130_DB_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet120IP": {
      "type": "string",
      "defaultValue": "10.128.6.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet120NSGName": {
      "type": "string",
      "defaultValue": "130NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet121Name": {
      "type": "string",
      "defaultValue": "s135_LB_DB_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet121IP": {
      "type": "string",
      "defaultValue": "10.128.7.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet121NSGName": {
      "type": "string",
      "defaultValue": "135NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet122Name": {
      "type": "string",
      "defaultValue": "s150_DMZ_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet122IP": {
      "type": "string",
      "defaultValue": "10.128.8.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet122NSGName": {
      "type": "string",
      "defaultValue": "150NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet123Name": {
      "type": "string",
      "defaultValue": "s155_LB_DMZ_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet123IP": {
      "type": "string",
      "defaultValue": "10.128.9.0/24",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet123NSGName": {
      "type": "string",
      "defaultValue": "155NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet124Name": {
      "type": "string",
      "defaultValue": "s160_User_Tier0_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet124IP": {
      "type": "string",
      "defaultValue": "10.128.10.0/25",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet124NSGName": {
      "type": "string",
      "defaultValue": "160NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet125Name": {
      "type": "string",
      "defaultValue": "s161_User_Tier1_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet125IP": {
      "type": "string",
      "defaultValue": "10.128.10.128/25",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet125NSGName": {
      "type": "string",
      "defaultValue": "161NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },
    "snet126Name": {
      "type": "string",
      "defaultValue": "s162_User_Tier2_Prod_W1",
      "metadata": { "description": "Name of the subnet." }
    },
    "snet126IP": {
      "type": "string",
      "defaultValue": "10.128.11.0/25",
      "metadata": { "description": "CRI notation of the Subnet." }
    },
    "snet126NSGName": {
      "type": "string",
      "defaultValue": "162NSG",
      "metadata": { "description": "Network Security Group to associate to the subnet." }
    },

    /*
    Using the metadata spreadsheet, the Peering tab, filter results on VNET100, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "pr100PeeringName": {
      "type": "string",
      "defaultValue": "vnet1a_prod_w1_vnet1a_services_w1",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr100Source": {
      "type": "string",
      "defaultValue": "vnet1a_prod_w1",
      "metadata": { "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region." }
    },
    "pr100destSubscriptionID": {
      "type": "string",
      "defaultValue": "730f26b5-ebf5-4518-999f-0b4eb0cdc8f9",
      "metadata": { "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID." }
    },
    "pr100destResourceGroup": {
      "type": "string",
      "defaultValue": "rg_network_vnet1a_services_w1",
      "metadata": { "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID." }
    },
    "pr100DestinationVNET": {
      "type": "string",
      "defaultValue": "vnet1a_services_w1",
      "metadata": { "description": "Specific name for the source peering Azure Vnet." }
    },
    "pr100allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic to access this VNET?" }
    },
    "pr100allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?" }
    },
    "pr100allowGWAccess": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Can traffic from peering network leverage the gateway?" }
    },
    "pr100useRemoteGateway": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Can traffic use the remote gateway?" }
    }

  }, /*keep this line*/
  "variables": {
    "apiVersion": "2017-06-01",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('VNET100vnetName'))]"

  },
  "resources": [ /*go to the Metadata spreadsheet, NSGRules tab, filter on VNET 104
    Select the Resources that are grouped by color*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet116NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet117NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet118NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet119NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet120NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet121NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet122NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet123NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet124NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet125NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet126NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": { "securityRules": [] }
    },


    /*In the metadata spreadsheet, on the VNET Tab, filter on VNET100
          select the columns with Resource and grouped by Color. */
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnet100vnetName')]",
      "location": "[parameters('vnet100locationName')]",
      "tags": { "displayName": "AzureFoundation VNet Definition" },
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('vnet100vnetAddressPrefix')]" ] },
        "dhcpOptions": { "dnsServers": "[parameters('vnet100dnsServers')]" },
        "subnets": [
          /*In the metadata spreadsheet, on the Subnet Tab, filter on VNET100
          select the columns with Resource and grouped by Color. */
          {
            "name": "[parameters('snet116Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet116IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet116NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet117Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet117IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet117NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet118Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet118IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet118NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet119Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet119IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet119NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet120Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet120IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet120NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet121Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet121IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet121NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet122Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet122IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet122NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet123Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet123IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet123NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet124Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet124IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet124NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet125Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet125IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet125NSGName'))]" }
            }
          },
          {
            "name": "[parameters('snet126Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet126IP')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet126NSGName'))]" }
            }
          }

        ] /*Keep this Line*/
      }, /*Keep This Line*/
      "resources": [ /*Keep this Line*/
        /*Keep this Line*/
        /*Go to the Peering tab of the Metadata spreadsheet and filter on VNET 104
          select the Resources for Peering and past them below. */
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr100PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr100allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr100allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr100allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr100useRemoteGateway')]",
            "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('pr100destSubscriptionID'), '/resourceGroups/', parameters('pr100destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr100DestinationVNET'))]" }
          },
          "dependsOn": [ "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet100vnetName'))]" ]
        }

      ], /*Keep This Line*/
      "dependsOn": [ /*Keep This Line*/
        /*Keep This Line*/
        /*Using the metadata template on the Subnet Tab, filter to VNET100 and select
          the columns with DependsOn and grouped by color*/
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet116NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet117NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet118NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet119NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet120NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet121NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet122NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet123NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet124NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet125NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet126NSGName'))]"

      ] /*Keep This Line*/
    } /*Keep This Line*/
  ],

  /*Keep this line */
  "outputs": {

  }
}
